###########
# BUILDER #
###########

FROM ubuntu:20.04 as builder

WORKDIR /usr/src/app
# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
# install psycopg2 dependencies
# install
ARG DEBIAN_FRONTEND="noninteractive"
ENV TZ=Asia/Seoul
RUN apt-get update \
	&& apt-get install -y postgresql \
		python3-dev \
		musl-dev \
		pip \
		gcc \
		libpq-dev \
		python3-pip \
		build-essential \
# install dependencies
	&& pip install --upgrade pip
# install pandas numpy
#RUN echo "@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories.
#RUN apk add --update --no-cache py3-numpy py3-pandas@testing
COPY ./requirement.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirement.txt

#########
# FINAL #
#########

FROM ubuntu:20.04
# create directory for the app user
RUN mkdir -p /home/app
# create the app user
RUN adduser --system app && addgroup --system app
# create the appropriate directories
ENV HOME=/home/app
ENV INNER_API_HOME=/home/app/inner_api
RUN mkdir $INNER_API_HOME
RUN mkdir $INNER_API_HOME/staticfiles
WORKDIR $INNER_API_HOME
# install dependencies
RUN apt-get update && apt-get install -y python3-pip
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirement.txt .
RUN pip install --no-cache /wheels/*
# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g' $INNER_API_HOME/entrypoint.prod.sh
RUN chmod +x  $INNER_API_HOME/entrypoint.prod.sh
# copy project
COPY . $INNER_API_HOME
# chown all the files to the app user
RUN chown -R app:app $INNER_API_HOME
# change to the app user
USER app
# run entrypoint.prod.sh
ENTRYPOINT [ "/home/app/inner_api/entrypoint.prod.sh" ]
